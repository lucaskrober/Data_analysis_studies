select(Date, stocksday) %>%
unique() %>%
filter(!is.na(stocksday)) %>%
mutate(diff=)
returns <- read_csv("data/returns.csv.bz2")
# File "returns.csv.bz2" contains randomly generated values of stock returns
library(tidyverse)
returns1 <- returns %>%
gather(column,stock, contains("stock_")) %>%
group_by(Date)%>%
mutate(stocksday=sum(stock)) %>%
arrange(Date)%>%
select(Date, stocksday) %>%
unique() %>%
filter(!is.na(stocksday)) %>%
mutate(diff=)
rlang::last_error()
rlang::last_trace()
returns1 <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"[^0123456789]",""))
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"[^0123456789]",""))
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"[^0123456789]","")) %>%
mutate(new=cumsum(Value))
returns1 <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"[^0123456789]","")) %>%
mutate(new=cumsum(Value))
View(returns1)
returns1 <- returns %>%
gather(column,stock, contains("stock_")) %>%
group_by(Date)%>%
mutate(stocksday=sum(stock)) %>%
arrange(Date)%>%
select(Date, stocksday) %>%
unique() %>%
filter(!is.na(stocksday))
View(returns1)
returns3 <- returns1 %>%
pull(stocksday) %>%
diff
returns1 %>%
pull(stocksday)
returns1 %>%
pull(stocksday) %>%
diff
class(returns1$stocksday)
mutate(stocksday=str_replace_all(stocksday,"50.89591","NA"))%>%
mutate(stocksday=str_replace_all(stocksday,"50.8959068559553","0"))%>%
plot(stocksday)
returns3 <- returns1 %>%
pull(stocksday) %>%
diff %>%
mutate(stocksday=str_replace_all(stocksday,"50.89591","NA"))%>%
mutate(stocksday=str_replace_all(stocksday,"50.8959068559553","0"))%>%
plot(stocksday)
returns <- read_csv("data/returns.csv.bz2")
returns1 <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"[^0123456789]",""))
?cumsum
returns1 <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"[^0123456789]","")) %>%
?regex
?grep
library(tidyverse)
spendings <- as_tibble(read.csv("data/credit_card_spendings.csv.bz2"))
spendings %>%
select(Amount) %>%
grep('\d+.\d\d', Amount)
spendings %>%
select(Amount) %>%
grep('[0-9]{}.[0-9]{2}', Amount)
spendings %>%
select(Amount)
spendings %>%
select(Amount) %>%
mutate(Amount=grep('[0-9]{}.[0-9]{2}',Amount))
spendings %>%
select(Amount) %>%
mutate(Amount=grep('^\d\d?[,.]\d{2}$',Amount))
spendings %>%
select(Amount) %>%
mutate(Amount=grep("^\d\d?[,.]\d{2}$",Amount))
spendings %>%
mutate(Amount=grep("^\d\d?[,.]\d{2}$",Amount))
returns <- read_csv("data/returns.csv.bz2")
returns %>%
gather(column,stock, contains("stock_"))
returns %>%
gather(column,stock, contains("stock_")) %>%
group_by(Date)
returns %>%
gather(column,stock, contains("stock_")) %>%
group_by(Date)%>%
filter(Date=="1990-01-03")
returns %>%
gather(column,stock, contains("stock_")) %>%
group_by(Date)%>%
filter(Date==1990-01-03)
returns %>%
gather(Stock,value, contains("stock_")) %>%
filter(Date=="1990-01-03") %>%
returns %>%
gather(Stock,value, contains("stock_")) %>%
filter(Date=="1990-01-03")
returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(price = Value - lag(Value, default = Value[1]))
View(returns)
returns1 <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(price = Value - lag(Value, default = Value[1]))
View(returns1)
returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(price = Value - lag(Value, default = Value[1]))
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(price = Value - lag(Value, default = Value[1]))
returns %>%
gather(Stock,Value, contains("stock_"))%>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
group_by(Year,Month)
returns %>%
gather(Stock,Value, contains("stock_"))%>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
group_by(Year,Month) %>%
ggplot()+
geom_point(aes(x=Day,y=Value,color=Stock),alpha=.3,show.legend=F)
returns %>%
gather(Stock,Value, contains("stock_"))%>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
group_by(Year,Month) %>%
ggplot()+
geom_line(aes(x=Day,y=Value,color=Stock),alpha=.3,show.legend=F)
returns %>%
gather(Stock,Value, contains("stock_"))%>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
group_by(Year,Month) %>%
ggplot()+
geom_line(aes(x=Day,y=Price,color=Stock),alpha=.3,show.legend=F)
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
gather(Stock,Value, contains("stock_"))%>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
group_by(Year,Month) %>%
ggplot()+
geom_line(aes(x=Day,y=Price,color=Stock),alpha=.3,show.legend=F)
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
gather(Year,Month,contains("stock_"))
returns <- read_csv("data/returns.csv.bz2")
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns <- read_csv("data/returns.csv.bz2")
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
gather(Year,Month,contains("stock_"))
View(returns)
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
gather(Year,Month,contains("199"))
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
group_by(Year,Month) %>%
mutate(Year.Mounth="Year[Year]-Month[Month]")
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
group_by(Year,Month) %>%
mutate(Year.Mounth=Year[Year]-Month[Month])
spendings <- as_tibble(read.csv("data/credit_card_spendings.csv.bz2"))
spendings %>%
select(Amount) %>%
mutate(Amount=grep("^[0-9]{}([.]{1}[0-9]{1,2})?$",Amount,perl=T))
spendings %>%
mutate(Amount=grep("^[0-9]{}([.]{1}[0-9]{1,2})?$",Amount,perl=T))
spendings %>%
mutate(Amount=grep("^[0-9]{}([.]{1}[0-9]{1,2})?$", Amount))
spendings %>%
mutate(Amount=grep("^[0-9]{}([.]{1}[0-9]{2})?$", Amount))
spendings %>%
mutate(Amount=grep("\d+([\.][\d{0-2}])?", Amount))
spendings %>%
mutate(Amount=grep("[0-9]{}([\.][\d{0-2}])?", Amount))
spendings %>%
mutate(Amount=grep("^[0-9]\[0-9]?[.]\[0-9]\[0-9]?$", Amount))
spendings %>%
mutate(Amount=grep("^[0-9][0-9]?[.][0-9][0-9]?$", Amount))
spendings %>%
mutate(Amount=grepl("^[0-9][0-9]?[.][0-9][0-9]?$", Amount))
spendings %>%
select(Amount) %>%
mutate(Amount=grepl("^[0-9][0-9]?[.][0-9][0-9]?$", Amount))
tamount <- spendings %>%
select(Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
sum();
group_by(Year,Month) %>%
?ym
?ym
?ymd
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
mutate(Date=ymd(paste(Year,Month,sep="-")))
returns <- read_csv("data/returns.csv.bz2")
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
separate(Date,c("Year", "Month", "Day"),"-")
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
mutate(Date=ymd(paste(Year,Month,sep="-")))
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
gather(Day,value,1:31)
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
gather(Day,Price,1:31)
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
gather(Day,Price)
returns %>%
separate(Date,c("Year", "Month", "Day"),"-")
?str_replace
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
returns %>%
str_replace(Date, "[-]", "")
returns %>%
str_replace(Date, "-", "")
str_replace(fruits, "([aeiou])", "")
returns <- read_csv("data/returns.csv.bz2")
returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
str_replace(Date, "-", "")
returns %>%
gsub("-","", Date,perl=T)
returns %>%
select(Date) %>%
gsub("-","", Date,perl=T)
?regex
?grep
returns %>%
select(Date) %>%
str_replace(Date , "-" , "." )
spendings <- as_tibble(read.csv("data/credit_card_spendings.csv.bz2"))
spendings <- spendings %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
sum(Amount);
spendings <- spendings %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
sum(spendings$Amount);
spendings %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]",""))
spendings %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
spendings %>%
select(Amount,Vendor,Year.Month) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount))
spendings <- as_tibble(read.csv("data/credit_card_spendings.csv.bz2"))
tamount <- spendings %>%
select(Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
sum();
# 2. Who is the biggest vendor?
bvendor <- spendings %>%
select(Vendor,Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
group_by(Vendor) %>%
summarise(Vendor.Amount=sum(Amount)) %>%
filter(Vendor.Amount==max(Vendor.Amount))
# 3. How much in total was spent in GEXPRO?
#There is any line with misspelled Vendor name?
gexpro=which(str_detect(spendings$Vendor, "GEXPRO")==TRUE)
spendings$Vendor[gexpro]
tspentgxpro <- spendings %>%
mutate(Vendor=str_replace(Vendor," CSF","")) %>%
filter(Vendor=="GEXPRO") %>%
select(Vendor,Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
summarize(Amount=sum(Amount))
# 4. How much was spent in GEXPRO in June 2014?
tspentgxpro201406 <- spendings %>%
mutate(Vendor=str_replace(Vendor," CSF","")) %>%
filter(Vendor=="GEXPRO") %>%
filter(Year.Month=="201406") %>%
select(Vendor,Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
summarize(Amount=sum(Amount))
returns <- read_csv("data/returns.csv.bz2")
returns %>%
gather(Stock,Value, contains("stock_"))
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
separate(Date,c("Year", "Month", "Day"),"-")
returns %>%
separate(Date,c("Year", "Month", "Day"),"-") %>%
mutate(Date=ymd(paste(Year,Month,sep="-")))
returns %>%
mutate(Date=str_replace("^[0-9]","",Date))
returns %>%
select(Date) %>%
mutate(Date=str_replace("^[0-9]","",Date))
returns %>%
select(Date) %>%
mutate(Date=str_replace(Date,"^[0-9]",""))
returns %>%
mutate(Date=str_replace(Date,"^[0-9]",""))
returns %>%
mutate(Date=str_replace(Date,"-",""))
returns %>%
mutate(Date=str_replace(Date,"-","")) %>%
separate(Date,c("Year.Month", "Day"),"-")
returns %>%
mutate(Date=str_replace(Date,"-","")) %>%
separate(Date,c("Year.Month", "Day"),"-") %>%
group_by(Year.Month) %>%
cumsum(Price)
?cumsum
returns %>%
mutate(Date=str_replace(Date,"-","")) %>%
separate(Date,c("Year.Month", "Day"),"-") %>%
group_by(Year.Month) %>%
summarize(oscill=cumsum(Price))
returns %>%
mutate(Date=str_replace(Date,"-","")) %>%
separate(Date,c("Year.Month", "Day"),"-") %>%
group_by(Year.Month) %>%
summarize(Price=cumsum(Price))
returns <- returns %>%
mutate(Date=str_replace(Date,"-","")) %>%
separate(Date,c("Year.Month", "Day"),"-") %>%
group_by(Year.Month) %>%
ggplot()+
geom_line(aes(x=Day,y=Price,color=Stock),alpha=.3,show.legend=F)+
geom_point(data=returns,mapping=aes(x=Day,y=Price))+
theme_minimal()
returns <- returns %>%
mutate(Date=str_replace(Date,"-","")) %>%
separate(Date,c("Year.Month", "Day"),"-") %>%
group_by(Year.Month) %>%
ggplot()+
geom_point(aes(x=Day,y=Price,color=Stock),alpha=.3,show.legend=F)+
geom_point(data=returns,mapping=aes(x=Day,y=Price))+
theme_minimal()
returns <- read_csv("data/returns.csv.bz2")
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
mutate(Date=str_replace(Date,"-","")) %>%
separate(Date,c("Year.Month", "Day"),"-") %>%
group_by(Year.Month) %>%
ggplot()+
geom_point(aes(x=Day,y=Price,color=Stock),alpha=.3,show.legend=F)+
geom_point(data=returns,mapping=aes(x=Day,y=Price))+
theme_minimal()
returns %>%
mutate(Date=str_replace(Date,"-","")) %>%
separate(Date,c("Year.Month", "Day"),"-") %>%
group_by(Year.Month)
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"Stock_",""))
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"stock_",""))
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero.
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"stock_","")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"stock_","")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
spendings <- as_tibble(read.csv("data/credit_card_spendings.csv.bz2"))
library(tidyverse)
spendings <- as_tibble(read.csv("data/credit_card_spendings.csv.bz2"))
#spendings$Amount <- as.numeric(spendings$Amount)
#regex: ^\d\d?[.]\d\d?$ (why it doesn't work?)
tamount <- spendings %>%
select(Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
sum();
# 2. Who is the biggest vendor?
bvendor <- spendings %>%
select(Vendor,Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
group_by(Vendor) %>%
summarise(Vendor.Amount=sum(Amount)) %>%
filter(Vendor.Amount==max(Vendor.Amount))
# 3. How much in total was spent in GEXPRO?
#There is any line with misspelled Vendor name?
gexpro=which(str_detect(spendings$Vendor, "GEXPRO")==TRUE)
spendings$Vendor[gexpro]
tspentgxpro <- spendings %>%
mutate(Vendor=str_replace(Vendor," CSF","")) %>%
filter(Vendor=="GEXPRO") %>%
select(Vendor,Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
summarize(Amount=sum(Amount))
# 4. How much was spent in GEXPRO in June 2014?
tspentgxpro201406 <- spendings %>%
mutate(Vendor=str_replace(Vendor," CSF","")) %>%
filter(Vendor=="GEXPRO") %>%
filter(Year.Month=="201406") %>%
select(Vendor,Amount) %>%
mutate(Amount=str_replace_all(Amount, "[^-0123456789.]","")) %>%
mutate(Amount=as.numeric(Amount)) %>%
summarize(Amount=sum(Amount))
View(tspentgxpro201406)
# File "returns.csv.bz2" contains randomly generated values of stock returns
library(tidyverse)
returns <- read_csv("data/returns.csv.bz2")
# Reconstruct the values of all stocks assuming that the price of all stocks
# on 1990-01-03 was equal to zero. function pivot_longer is a better function than
# gather, because gather can lost information or something
returns <- returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"stock_","")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"stock_","")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1]))
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"stock_","")) %>%
group_by(Stock) %>%
mutate(Price = Value - lag(Value, default = Value[1])) %>%
mutate(Price = cumsum(Price))
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"stock_","")) %>%
group_by(Stock) %>%
#mutate(Price = Value - lag(Value, default = Value[1])) %>%
mutate(Price = cumsum(Price))
returns %>%
gather(Stock,Value, contains("stock_")) %>%
mutate(Stock=str_replace_all(Stock,"stock_","")) %>%
group_by(Stock) %>%
#mutate(Price = Value - lag(Value, default = Value[1])) %>%
mutate(Price = cumsum(Value))
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages("D:/Arquivos/cmrinvflor_2.0.zip", repos = NULL, type = "win.binary")
